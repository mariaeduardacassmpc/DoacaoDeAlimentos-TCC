@page "/login"
@using Blazored.Modal
@using Blazored.Modal.Services
@using TCCDoacaoDeAlimentos.Shared.Models
@inject HttpClient Http
@inject Blazored.Modal.Services.IModalService Modal
@inject NavigationManager Navigation


<div class="login-container" style="background-color: #d4edda; min-height: 100vh;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="card shadow-lg rounded-4">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <i class="bi bi-box2-heart" style="font-size: 3rem; color: #198754;"></i>
                            <h2 class="mt-3 fw-bold">Acesse sua conta</h2>
                            <p class="text-muted">Entre para gerenciar suas doações</p>
                        </div>

                        <EditForm Model="@usuario">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label for="email" class="form-label">E-mail</label>
                                <InputText id="email" @bind-Value="usuario.Email" class="form-control" placeholder="seu@email.com" />
                                <ValidationMessage For="@(() => usuario.Email)" class="text-danger" />
                            </div>

                            <div class="mb-4">
                                <label for="password" class="form-label">Senha</label>
                                <InputText id="password" @bind-Value="usuario.Senha" type="password" class="form-control" placeholder="••••••••" />
                                <ValidationMessage For="@(() => usuario.Senha)" class="text-danger" />
                            </div>

                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="bi bi-box-arrow-in-right me-2"></i> Entrar
                                </button>
                            </div>

                            <div class="text-center">
                                <NavLink href="/recuperar-senha" class="text-decoration-none">Esqueceu sua senha?</NavLink>
                                <p class="mt-3">
                                    Não tem conta?
                                    <button type="button" class="btn btn-link text-success fw-semibold p-0" @onclick="IrParaCadastro">
                                        Cadastre-se
                                    </button>
                                </p>

                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private Usuario usuario = new Usuario();
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void IrParaCadastro()
    {
        Navigation.NavigateTo("/CadastroDeEntidade");
    }

    private async Task RealizarLogin()
    {
        var response = await Http.PostAsJsonAsync("api/login", usuario);
        if (response.IsSuccessStatusCode)
        {
            var usuarioLogado = await response.Content.ReadFromJsonAsync<UsuarioLogado>();
            if (usuarioLogado != null)
            {
                UsuarioLogadoService.DefinirUsuario(usuarioLogado);
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            // Trate erro de login
        }
    }
}