@page "/CadastroDeOng"
@using TCCDoacaoDeAlimentos.Shared.Models
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<div class="min-vh-100 d-flex align-items-center" style="background-color: #d4edda;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <h1 class="card-title text-center">Cadastro de ONG</h1>
                        <h6 class="text-center mb-4">
                            Cadastre sua organização para receber doações de alimentos
                        </h6>

                        <EditForm Model="@ong" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />

                            <hr />

                            <h2 class="border-bottom pb-2 mb-4 mt-5">Informações da Organização</h2>

                            <div class="mb-3">
                                <label for="ong-razaoSocial" class="form-label">Razão Social *</label>
                                <InputText @bind-Value="ong.RazaoSocial"
                                           class="form-control"
                                           id="ong-razaoSocial"
                                           placeholder="Nome da sua organização" />
                                <ValidationMessage For="@(() => ong.RazaoSocial)" class="text-danger" />
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label">Senha *</label>
                                    <div class="position-relative">
                                        <InputText type="password"
                                                   @bind-Value="ong.Senha"
                                                   class="form-control pe-5"
                                                   placeholder="Digite sua senha"
                                                   id="senhaOng" />
                                        <button type="button"
                                                class="btn position-absolute top-50 end-0 translate-middle-y bg-transparent border-0"
                                                @onclick="@(() => TogglePassword("senhaOng"))">
                                            <i class="fas fa-eye text-success"></i>
                                        </button>
                                    </div>
                                    <ValidationMessage For="@(() => ong.Senha)" class="text-danger" />
                                </div>

                                <div class="col-md-6">
                                    <label class="form-label">Confirme sua senha *</label>
                                    <div class="position-relative">
                                        <InputText type="password"
                                                   @bind-Value="ong.ConfirmarSenha"
                                                   class="form-control pe-5"
                                                   placeholder="Digite novamente sua senha"
                                                   id="confirmarSenhaOng" />
                                        <button type="button"
                                                class="btn position-absolute top-50 end-0 translate-middle-y bg-transparent border-0"
                                                @onclick="@(() => TogglePassword("confirmarSenhaOng"))">
                                            <i class="fas fa-eye text-success"></i>
                                        </button>
                                    </div>
                                    <ValidationMessage For="@(() => ong.ConfirmarSenha)" class="text-danger" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="cnpj" class="form-label">CNPJ *</label>
                                <input type="text"
                                       @bind="ong.CNPJ_CPF"
                                       @bind:event="oninput"
                                       class="form-control"
                                       id="cnpj"
                                       placeholder="00.000.000/0000-00" />
                                <ValidationMessage For="@(() => ong.CNPJ_CPF)" class="text-danger" />
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="email" class="form-label">Email *</label>
                                    <InputText @bind-Value="ong.Email"
                                               class="form-control"
                                               id="email"
                                               placeholder="contato@ong.org" />
                                    <ValidationMessage For="@(() => ong.Email)" class="text-danger" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="phone" class="form-label">Telefone *</label>
                                    <input type="text"
                                           @bind="ong.Telefone"
                                           @bind:event="oninput"
                                           class="form-control"
                                           id="phone"
                                           placeholder="(00) 00000-0000" />
                                    <ValidationMessage For="@(() => ong.Telefone)" class="text-danger" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="responsible-name" class="form-label">Nome do Responsável *</label>
                                <InputText @bind-Value="ong.Responsavel"
                                           class="form-control"
                                           id="responsible-name"
                                           placeholder="Nome completo do responsável" />
                                <ValidationMessage For="@(() => ong.Responsavel)" class="text-danger" />
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="cep" class="form-label">CEP *</label>
                                    <input type="text"
                                           @bind="ong.CEP"
                                           @bind:event="oninput"
                                           class="form-control"
                                           id="cep"
                                           placeholder="00000-000" />
                                    <ValidationMessage For="@(() => ong.CEP)" class="text-danger" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="cidade" class="form-label">Cidade *</label>
                                    <InputText @bind-Value="ong.Cidade"
                                               class="form-control"
                                               id="cidade"
                                               placeholder="Sua cidade" />
                                    <ValidationMessage For="@(() => ong.Cidade)" class="text-danger" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="endereco" class="form-label">Endereço *</label>
                                <InputText @bind-Value="ong.Endereco"
                                           class="form-control"
                                           id="endereco"
                                           placeholder="Endereço completo" />
                                <ValidationMessage For="@(() => ong.Endereco)" class="text-danger" />
                            </div>

                            <div class="mb-3">
                                <label for="bairro" class="form-label">Bairro *</label>
                                <InputText @bind-Value="ong.Bairro"
                                           class="form-control"
                                           id="bairro"
                                           placeholder="Bairro" />
                                <ValidationMessage For="@(() => ong.Bairro)" class="text-danger" />
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-success btn-lg mt-3">
                                    Enviar Cadastro
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Entidade ong = new Entidade() { Tipo = Entidade.TipoEntidade.O };
    private bool isProcessing = false;  // Para evitar múltiplos submits

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("applyOngMasks");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (isProcessing) return;
        isProcessing = true;

        try
        {
            // Remove máscaras antes de enviar
            ong.CNPJ_CPF = RemoveMask(ong.CNPJ_CPF);
            ong.Telefone = RemoveMask(ong.Telefone);
            ong.CEP = RemoveMask(ong.CEP);

            // Envia para o backend
            var response = await Http.PostAsJsonAsync("api/entidade/adicionar", ong);

            if (response.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Cadastro realizado com sucesso!");
                Navigation.NavigateTo("/");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Erro ao cadastrar: {error}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Erro ao cadastrar: {ex.Message}");
        }
        finally
        {
            isProcessing = false;
        }
    }

    private string RemoveMask(string value)
    {
        return value?.Replace(".", "")
                   .Replace("/", "")
                   .Replace("-", "")
                   .Replace("(", "")
                   .Replace(")", "")
                   .Replace(" ", "");
    }

    private async Task TogglePassword(string elementId)
    {
        await JSRuntime.InvokeVoidAsync("togglePassword", elementId);
    }
}