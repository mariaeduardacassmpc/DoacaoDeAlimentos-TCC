@page "/Geolocalizacao"
@using TCCDoacaoDeAlimentos.Shared.Dto;
@inject HttpClient Http

@inject IJSRuntime JS
<div class="min-vh-100 py-5 d-flex flex-column align-items-center" style="background-color: #d4edda;">
    <h3>Instituições na sua Região</h3>
    <p>Encontre organizações próximas para fazer sua doação</p>

    <div class="w-100 mt-3" style="max-width: 100%; display: flex; justify-content: center;">
        <div id="map" style="height: 450px; width: 100%; max-width: 1400px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);"></div>
    </div>


</div>

@code {
    private string errorMessage;
    private double userLat;
    private double userLng;
    private bool isLoading = true;
    private List<OngDto> ongs = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                while (await JS.InvokeAsync<bool>("eval", "document.getElementById('map') === null"))
                {
                    await Task.Delay(100);
                }

                var pos = await JS.InvokeAsync<Location>("getUserLocation");
                userLat = pos.Lat;
                userLng = pos.Lng;

                await JS.InvokeVoidAsync("initializeMap", userLat, userLng);

                await LoadOngsPorCoordenadas(userLat, userLng);
                await JS.InvokeVoidAsync("addMarkers", ongs);

                isLoading = false;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                errorMessage = $"Para oferecer uma experiência personalizada, precisamos acessar sua localização. Sem isso, alguns recursos podem não funcionar corretamente.";
                isLoading = false;
                StateHasChanged();
            }
        }
    }

    private async Task LoadOngsPorCoordenadas(double latitude, double longitude)
    {
        try
        {
            ongs = await Http.GetFromJsonAsync<List<OngDto>>(
                $"api/entidade/buscarInstituicoesPorCoordenadas/{latitude.ToString(System.Globalization.CultureInfo.InvariantCulture)}/{longitude.ToString(System.Globalization.CultureInfo.InvariantCulture)}"
            ) ?? new List<OngDto>();

        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao carregar ONGs.";
        }
    }
}
