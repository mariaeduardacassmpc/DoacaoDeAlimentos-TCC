@page "/geolocalizacao"
@inject IJSRuntime JS
<div class="min-vh-100 py-5 d-flex flex-column align-items-center" style="background-color: #d4edda;">
<h3>Mapa de localização</h3>

    @if (isLoading)
    {
        <div class="mb-3">
            <span>Carregando...</span>
        </div>
    }

    <div id="map" style="height: 550px; width: 1400px; mt-3"></div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p style="color:red">@errorMessage</p>
    }
</div>

@code {
    private string errorMessage;
    private double userLat;
    private double userLng;
    private bool isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                while (await JS.InvokeAsync<bool>("eval", "document.getElementById('map') === null"))
                {
                    await Task.Delay(100);
                }

                var pos = await JS.InvokeAsync<Location>("getUserLocation");
                userLat = pos.Lat;
                userLng = pos.Lng;

                await JS.InvokeVoidAsync("initializeMap", userLat, userLng);

                isLoading = false;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                errorMessage = $"Erro ao obter localização: {ex.Message}";
                isLoading = false;
                StateHasChanged();
            }
        }
    }

    private class Location
    {
        public double Lat { get; set; }
        public double Lng { get; set; }
    }
}
