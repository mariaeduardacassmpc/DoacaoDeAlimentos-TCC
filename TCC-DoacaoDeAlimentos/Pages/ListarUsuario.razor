@page "/Usuarios"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using TCCDoacaoDeAlimentos.Shared.Models;
@using TCCDoacaoDeAlimentos.Shared.Dto;

<div class="d-flex justify-content-center" style="background-color: #d4edda; min-height: 100vh;">
    <div class="col-12 col-lg-12 col-xl-11 mt-5">
        <div class="card shadow-lg border-0">
            <div class="card-body p-4">
                <h3 class="text-center mb-4">Gerenciamento de Usuários</h3>
                <hr />
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Nome</th>
                                <th scope="col">Tipo</th>
                                <th scope="col">Telefone</th>
                                <th scope="col">Email</th>
                                <th scope="col">Situação</th>
                                <th scope="col">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var usuario in usuariosPaginated)
                            {
                                <tr>
                                    <td>@usuario.RazaoSocial</td>
                                    <td>@FormatarTipoEntidade(usuario.TpEntidade.ToString())</td>
                                    <td>@usuario.Telefone</td>
                                    <td>@usuario.Email</td>
                                    <td>@(usuario.Ativo == true ? "Ativo" : "Inativo")</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-danger"
                                                @onclick="() => AbrirModalInativar(usuario.Id)"
                                                disabled="@(usuario.Ativo == false)">
                                            <i class="bi bi-slash-circle"></i>
                                        </button>

                                        <button class="btn btn-sm btn-outline-success" @onclick="() => ObterUsuario(usuario)">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <nav aria-label="Navegação de páginas" style="text-align: left;">
                        <ul style="list-style: none; padding-left: 0; display: flex;">
                            <li>
                                <a href="#" aria-label="Anterior"
                                   @onclick="() => ChangePage(currentPage - 1)"
                                   style="text-decoration: none; padding: 4px 10px; border: 1px solid #ccc; border-radius: 3px;@(currentPage == 1 ? " opacity:0.5;pointer-events:none;" : "")">
                                    &laquo;
                                </a>
                            </li>
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li>
                                    <a href="#"
                                       @onclick="() => ChangePage(i)"
                                       style="text-decoration: none; padding: 4px 10px; border: 1px solid #ccc; border-radius: 3px;@(i == currentPage ? " background:#eee;" : "")">
                                        @i
                                    </a>
                                </li>
                            }
                            <li>
                                <a href="#" aria-label="Próximo"
                                   @onclick="() => ChangePage(currentPage + 1)"
                                   style="text-decoration: none; padding: 4px 10px; border: 1px solid #ccc; border-radius: 3px;@(currentPage == totalPages ? " opacity:0.5;pointer-events:none;" : "")">
                                    &raquo;
                                </a>
                            </li>
                        </ul>
                    </nav>


                </div>
            </div>
        </div>
    </div>
</div>
<br />

@if (showEditModal && usuarioEditando != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Usuário</h5>
                    <button type="button" class="btn-close" @onclick="FecharEditModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row mb-3">
                            <div class="col-md-9">
                                <label class="form-label">Nome/Razão Social</label>
                                <input class="form-control" @bind="usuarioEditando.RazaoSocial" />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Tipo</label>
                                <select class="form-select" @bind="usuarioEditando.TpEntidade">
                                    <option value="D">Doador</option>
                                    <option value="O">Ong</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Telefone</label>
                                <input class="form-control" @bind="usuarioEditando.Telefone" />
                            </div>
                            <div class="col-md-5">
                                <label class="form-label">Email</label>
                                <input class="form-control" @bind="usuarioEditando.Email" />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">CPF/CNPJ</label>
                                <input class="form-control" @bind="usuarioEditando.CNPJ_CPF" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">CEP</label>
                                <input class="form-control" @bind="usuarioEditando.CEP" />
                            </div>
                            <div class="col-md-8">
                                <label class="form-label">Cidade</label>
                                <input class="form-control" @bind="usuarioEditando.Cidade" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Endereço</label>
                                <input class="form-control" @bind="usuarioEditando.Endereco" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Bairro</label>
                                <input class="form-control" @bind="usuarioEditando.Bairro" />
                            </div>
                            <div class="col-md-6">
                                @if (usuarioEditando?.TpEntidade.ToString() == "D")
                                {
                                    <label class="form-label">Sexo</label>
                                    <select class="form-select" @bind="usuarioEditando.Sexo">
                                        <option value="">Selecione</option>
                                        <option value="M">Masculino</option>
                                        <option value="F">Feminino</option>
                                    </select>
                                }
                                else
                                {
                                    <label class="form-label">Responsável</label>
                                    <input class="form-control" @bind="usuarioEditando.Responsavel" />
                                }
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Senha</label>
                                <input class="form-control" @bind="usuarioEditando.Senha" type="password" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Ativo</label>
                                <select class="form-select" @bind="usuarioEditando.Ativo">
                                    <option value="false">Ativo</option>
                                    <option value="true">Inativo</option>
                                </select>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="FecharEditModal">Cancelar</button>
                    <button type="button" class="btn btn-success" @onclick="SalvarEdicao">Salvar Alterações</button>
                </div>
            </div>
        </div>
    </div>
}
@if (ExibirModalInativar)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmação</h5>
                    <button type="button" class="btn-close" @onclick="FecharModalInativar"></button>
                </div>
                <div class="modal-body">
                    <p>Tem certeza que quer INATIVAR esse usuário?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="FecharModalInativar">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarInativacaoConfirmada">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private List<Entidade> usuarios = new();
    private List<Entidade> usuariosPaginated = new();
    private bool showModal = false;
    private int idParaExcluir;
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalPages = 1;
    private bool showEditModal = false;
    private Entidade? usuarioEditando;
    bool ExibirModalInativar = false;
    int idUsuarioParaExcluir;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await Http.GetFromJsonAsync<List<Entidade>>("api/entidade/obterTodasEntidades");
        UpdatePagination();
    }

    private void ObterUsuario(Entidade usuario)
    {
        usuarioEditando = new Entidade
        {
                Id = usuario.Id,
                RazaoSocial = usuario.RazaoSocial,
                CNPJ_CPF = usuario.CNPJ_CPF,
                TpEntidade = usuario.TpEntidade,
                Telefone = usuario.Telefone,
                Email = usuario.Email,
                Ativo = usuario.Ativo,
                Endereco = usuario.Endereco,
                Bairro = usuario.Bairro,
                CEP = usuario.CEP,
                Sexo = usuario.Sexo,
                Responsavel = usuario.Responsavel,
                Senha = usuario.Senha,
                Cidade = usuario.Cidade,
        };
        showEditModal = true;
    }

    private void FecharEditModal()
    {
        showEditModal = false;
        usuarioEditando = null;
    }

    private async Task SalvarEdicao()
    {
        if (usuarioEditando != null)
        {
            var entidadeEdicao = new EntidadeEdicaoDto
                {
                    Id = usuarioEditando.Id,
                    TpEntidade = usuarioEditando.TpEntidade.ToString(),
                    RazaoSocial = usuarioEditando.RazaoSocial,
                    CNPJ_CPF = usuarioEditando.CNPJ_CPF,
                    Telefone = usuarioEditando.Telefone,
                    Endereco = usuarioEditando.Endereco,
                    Bairro = usuarioEditando.Bairro,
                    CEP = usuarioEditando.CEP,
                    Cidade = usuarioEditando.Cidade,
                    Email = usuarioEditando.Email,
                    Sexo = usuarioEditando.Sexo,
                    Responsavel = usuarioEditando.Responsavel,
                    Latitude = usuarioEditando.Latitude?.ToString(),
                    Altitude = usuarioEditando.Altitude?.ToString(),
                    Numero = usuarioEditando.Numero,
                    TpPessoa = usuarioEditando.TpPessoa.ToString(),
                    Ativo = usuarioEditando.Ativo
                };

          eawait Http.PutAsJsonAsync($"api/entidade/atualizar/{usuarioEditando.Id}", entidadeEdicao);
            usuarios = await Http.GetFromJsonAsync<List<Entidade>>("api/entidade/obterTodasEntidades");
            UpdatePagination();
            showEditModal = false;
            usuarioEditando = null;
        }
    }


    private string FormatarTipoEntidade(string tipo)
    {
        return tipo switch
        {
            "D" => "Doador",
            "O" => "Ong",
            _ => tipo 
        };
    }

    private void UpdatePagination()
    {
        totalPages = (int)Math.Ceiling((double)usuarios.Count / pageSize);
        usuariosPaginated = usuarios.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
    }

    private void ChangePage(int page)
    {
        if (page >= 1 && page <= totalPages)
        {
            currentPage = page;
            UpdatePagination();
        }
    }

    private async Task InativarConfirmado(int idUsuarioParaExcluir)
    {
        showModal = false;
        if (idUsuarioParaExcluir > 0)
        {
            try
            {
                await Http.PutAsync($"api/entidade/inativar/{idUsuarioParaExcluir}", null);
                usuarios = await Http.GetFromJsonAsync<List<Entidade>>("api/entidade/obterTodasEntidades");
                UpdatePagination();
                StateHasChanged(); 
            }
            catch (HttpRequestException ex)
            {
                if (ex.Message.Contains("FK_Doacao_Doador"))
                {
                    await JSRuntime.InvokeVoidAsync("alert",
                        "Não é possível excluir: este usuário possui doações associadas.");
                }
            }
            idParaExcluir = 0;
        }
    }

    void AbrirModalInativar(int id)
    {
        idUsuarioParaExcluir = id;
        ExibirModalInativar = true;
    }

    void FecharModalInativar()
    {
        ExibirModalInativar = false;
    }

    void ConfirmarInativacaoConfirmada()
    {
        InativarConfirmado(idUsuarioParaExcluir);
        ExibirModalInativar = false;
    }
}