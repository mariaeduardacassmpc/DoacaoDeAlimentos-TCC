@page "/MinhasDoacoes"
@inject NavigationManager Navigation
@inject HttpClient Http
@using TCCDoacaoDeAlimentos.Shared.Models;

<div class="min-vh-100" style="background-color: #d4edda;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h1 class="card-title mb-0">
                                @(TipoUsuario == "O" ? "Doações Recebidas" : "Minhas Doações")
                            </h1>
                            @if (TipoUsuario == "D")
                            {
                                <button class="btn btn-success" @onclick="NavigateToCadastro">
                                    <i class="bi bi-plus-circle me-2"></i>Nova Doação
                                </button>
                            }
                        </div>

                        <div class="row">
                            @if (TipoUsuario == "D")
                            {
                                <div class="col-md-4">
                                    <label class="form-label">Filtrar por ONG</label>
                                    <select class="form-select" @bind="Filtro.IdOng">
                                        <option value="">Todas</option>
                                        @foreach (var ong in ListaDeOngs)
                                        {
                                            <option value="@ong.Id.ToString()">@ong.RazaoSocial</option>
                                        }
                                    </select>
                                </div>
                            }
                            <div class="col-md-4">
                                <label class="form-label">Filtrar por Status</label>
                                <select class="form-select" @bind="Filtro.Status">
                                    <option value="">Todos</option>
                                    @foreach (var status in ListaDeStatus)
                                    {
                                        <option value="@status">@status</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Data da Doação</label>
                                <input type="date" class="form-control" @bind="Filtro.DataDoacao" />
                            </div>
                        </div>

                        <div class="my-5"></div>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>ID</th>
                                        <th>ONG</th>
                                        <th>Data</th>
                                        <th>Status</th>
                                        <th>Detalhes</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var doacao in DoacoesFiltradas)
                                    {
                                        <tr>
                                            <td>@doacao.IdDoacao</td>
                                            <td>@ObterNomeOng(doacao.IdOng)</td>
                                            <td>@doacao.DataDoacao.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(doacao.Status)">
                                                    @doacao.Status
                                                </span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-success" 
                                                @onclick="() => VerDetalhes(doacao.IdDoacao)">Detalhes
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        @if (!DoacoesFiltradas.Any())
                        {
                            <div class="alert alert-success text-center">
                                Nenhuma doação encontrada.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Detalhes -->
@if (MostrarModal)
{
    <div class="modal fade show" style="display: block; background-color: rgba(0,0,0,0.5);" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-light">
                    <h5 class="modal-title">Detalhes da Doação #@(DoacaoSelecionada?.IdDoacao ?? 0)</h5>
                    <button type="button" class="btn-close" @onclick="FecharModal"></button>
                </div>
                <div class="modal-body">
                    @if (DoacaoSelecionada != null)
                    {
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6>Informações da ONG</h6>
                                <p><strong>Nome:</strong> @ObterNomeOng(DoacaoSelecionada.IdOng)</p>
                                <p><strong>Responsável: </strong> 
                                    @if (OngSelecionada != null && !string.IsNullOrEmpty(OngSelecionada.Responsavel))
                                    {
                                        @OngSelecionada.Responsavel
                                    }
                                    else
                                    {
                                        <span class="text-muted">Não informado</span>
                                    }
                                </p> 
                              <p>
                                <strong>Telefone: </strong>
                                @if (!string.IsNullOrWhiteSpace(OngSelecionada?.Telefone))
                                {
                                    <a href="tel:@OngSelecionada.Telefone">
                                        @OngSelecionada.Telefone
                                        <i class="bi bi-telephone-fill ms-1"></i>
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted">Não informado</span>
                                }
                            </p>
                            <p>
                                <strong>Endereço: </strong>
                                @if (!string.IsNullOrWhiteSpace(OngSelecionada?.Endereco))
                                {
                                    <a href="https://www.google.com/maps/search/@(Uri.EscapeDataString(OngSelecionada.Endereco))" target="_blank" rel="noopener">
                                        @OngSelecionada.Endereco
                                        <i class="bi bi-geo-alt-fill ms-1"></i>
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted">Não informado</span>
                                }
                            </p>
                            </div>
                            <div class="col-md-6">
                                <h6>Informações da Doação</h6>
                                <p><strong>Data:</strong> @DoacaoSelecionada.DataDoacao.ToString("dd/MM/yyyy")</p>
                                <p><strong>Status:</strong> <span class="badge @GetStatusBadgeClass(DoacaoSelecionada.Status)">@DoacaoSelecionada.Status</span></p>
                            </div>
                        </div>

                        <div class="border-top pt-3">
                            <h6>Alimentos Doados</h6>
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Alimento</th>
                                        <th>Quantidade</th>
                                        <th>Unidade</th>                                        
                                        <th>Validade</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in DoacaoSelecionada.Alimentos)
                                    {
                                        <tr>
                                            <td>@ObterNomeAlimento(item.AlimentoId)</td>
                                            <td>@item.Quantidade</td>
                                            <td>@item.UnidadeMedida</td>
                                            <td>@item.Validade</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger me-2" @onclick="AbrirModalMotivo">Cancelar Doação</button>
                    <button type="button" class="btn btn-secondary" @onclick="FecharModal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
}
@if (MostrarModalMotivo)
{
    <div class="modal fade show" style="display: block; background-color: rgba(0,0,0,0.5);" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-light">
                    <h5 class="modal-title">Motivo do Cancelamento</h5>
                    <button type="button" class="btn-close" @onclick="FecharModalMotivo"></button>
                </div>
                <div class="modal-body">
                    <p>Selecione o motivo do cancelamento:</p>
                    @foreach (var motivo in Motivos)
                    {
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" id="@motivo" name="motivoCancelamento"
                                   value="@motivo" @onchange="() => MotivoCancelamento = motivo"
                                   checked="@(MotivoCancelamento == motivo)" />
                            <label class="form-check-label" for="@motivo">@motivo</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary me-2" @onclick="FecharModalMotivo">Voltar</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmarCancelamento" disabled="@string.IsNullOrEmpty(MotivoCancelamento)">Confirmar Cancelamento</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private FiltroDoacaoDto Filtro { get; set; } = new();
    private List<Doacao> DoacoesSalvas = new();
    private List<Entidade> ListaDeOngs = new();
    private List<Alimento> ListaDeAlimentos = new();
    private List<string> ListaDeStatus = new() { "Pendente", "Confirmada", "Cancelada" };
    private string TipoUsuario = "D";
    private bool MostrarModal { get; set; } = false;
    private Doacao? DoacaoSelecionada { get; set; }
    private Entidade? OngSelecionada { get; set; }
    private bool MostrarModalMotivo { get; set; } = false;
    private string? MotivoCancelamento { get; set; }
    private string[] Motivos = new[]
    {
        "Alimento errado",
        "ONG errada",
        "Data de validade errada"
    };

    private void NavigateToCadastro()
    {
        Navigation.NavigateTo("/CadastroDeDoacao");
    }

    protected override async Task OnInitializedAsync()
    {
        // var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        // var user = authState.User;

        // if (user.Identity.IsAuthenticated)
        // {
        //     TipoUsuario = user.FindFirst("tipo")?.Value;
        // }

        await CarregarDadosIniciais();
    }

    private async Task CarregarDadosIniciais()
    {
        try
        {
            TipoUsuario = "F";
            Filtro = new FiltroDoacaoDto
                {
                    IdDoador = 1
                };

            var jsonEnviado = System.Text.Json.JsonSerializer.Serialize(Filtro);
            var response = await Http.PostAsJsonAsync("api/doacao/filtrarDoacao", Filtro);

            if (response.IsSuccessStatusCode)
            {
                DoacoesSalvas = await response.Content.ReadFromJsonAsync<List<Doacao>>();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
            }

            ListaDeOngs = await Http.GetFromJsonAsync<List<Entidade>>("api/entidade/obterTodasOngs");
        }
        catch (Exception ex)
        {
        }
    }

    private IEnumerable<Doacao> DoacoesFiltradas =>
     DoacoesSalvas
         .Where(d => !Filtro.IdOng.HasValue || d.IdOng == Filtro.IdOng.Value)
         .Where(d => !Filtro.Status.HasValue || (int)d.Status == Filtro.Status.Value)
         .Where(d => Filtro.DataDoacao.HasValue
             ? d.DataDoacao.Date == Filtro.DataDoacao.Value.Date
             : true)
         .OrderByDescending(d => d.DataDoacao);


    private string ObterNomeOng(int idOng)
    {
        return ListaDeOngs.FirstOrDefault(o => o.Id == idOng)?.RazaoSocial ?? "Desconhecida";
    }

  private string ObterNomeAlimento(int alimentoId)
    {
        return ListaDeAlimentos.FirstOrDefault(a => a.Id == alimentoId)?.Nome ?? $"Alimento {alimentoId}";
    }

    private string GetStatusBadgeClass(StatusDoacao status)
    {
        return status switch
        {
            StatusDoacao.Pendente => "bg-warning text-dark",
            StatusDoacao.Finalizada => "bg-success",
            StatusDoacao.Cancelada => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private void AbrirModalMotivo()
    {
        MostrarModalMotivo = true;
    }
    
    private void VerDetalhes(int idDoacao)
    {
        DoacaoSelecionada = DoacoesFiltradas.FirstOrDefault(d => d.IdDoacao == idDoacao);
        
        if (DoacaoSelecionada != null)
        {
            OngSelecionada = ListaDeOngs.FirstOrDefault(o => o.Id == DoacaoSelecionada.IdOng);
            MostrarModal = true;
            StateHasChanged(); 
        }
    }
    
    private void FecharModal()
    {
        MostrarModal = false;
        StateHasChanged(); 
    }

    private void FecharModalMotivo()
    {
        MostrarModalMotivo = false;
        MotivoCancelamento = null;
    }

    private void ConfirmarCancelamento()
    {
        // Aqui você pode chamar a API para cancelar a doação, passando o motivo
        // Exemplo: await CancelarDoacaoAsync(DoacaoSelecionada.IdDoacao, MotivoCancelamento);

        MostrarModalMotivo = false;
        MostrarModal = false;
        MotivoCancelamento = null;
    }
}
