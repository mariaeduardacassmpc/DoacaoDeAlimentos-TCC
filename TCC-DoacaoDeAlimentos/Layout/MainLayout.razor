@inherits LayoutComponentBase
@inject IJSRuntime JS

<div class="page">
    <main>
        <nav class="navbar navbar-expand-lg navbar-light px-4 py-3 shadow-sm" style="background-color: white;">
            <div class="container-fluid">
                <NavLink class="navbar-brand fw-bold d-flex align-items-center" href="/">
                    <i class="bi bi-heart-fill me-2" style="color: var(--primary-color); font-size: 1.5rem;"></i>
                    <span style="color: var(--primary-color);">AlimentAção</span>
                </NavLink>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item mx-2">
                            <NavLink class="nav-link" active-class="active" href="/" @onclick="FecharMenu">Início</NavLink>
                        </li>
                        
                         <li class="nav-item mx-2">
                            <NavLink class="nav-link" href="/MinhasDoacoes" @onclick="FecharMenu">Minhas Doações</NavLink>
                        </li>

                        <li class="nav-item mx-2">
                            <NavLink class="nav-link" href="/CadastroDeAlimentos" @onclick="FecharMenu">Cadastro de Alimentos</NavLink>
                        </li>
                        
                        <li class="nav-item mx-2">
                            <NavLink class="nav-link" href="/Geolocalizacao" @onclick="FecharMenu">Geolocalização</NavLink>
                        </li>
                    </ul>

                    <div class="d-flex align-items-center gap-2">
                        <a class="btn btn-outline-success" href="/Login" @onclick="FecharMenu">Entrar</a>

                        <a class="btn btn-success" href="/CadastroDeDoacao" @onclick="FecharMenu">
                            <i class="bi bi-gift-fill me-1"></i> Doar
                        </a>

                        <!-- Botão Cadastre-se com dropdown -->
                        <div class="cadastre-se-wrapper position-relative" @onclick:stopPropagation="true">
                            <button class="btn btn-outline-success d-flex align-items-center gap-1"
                                    @onclick="ToggleDropdown" aria-haspopup="true" aria-expanded="@DropdownOpen">
                                Cadastre-se <i class="bi bi-chevron-down"></i>
                            </button>

                            @if (DropdownOpen)
                            {
                                <div class="cadastre-se-menu shadow">
                                    <a href="/CadastroDeOng" class="cadastre-se-link" @onclick="FecharMenu">Cadastro de Ong</a>
                                    <a href="/CadastroDeDoador" class="cadastre-se-link" @onclick="FecharMenu">Cadastro de Doador</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </main>
    
    <div class="main-content">
        <BlazoredToast />
        @Body
    </div>
</div>

@code {
    string TipoUsuario;

    private bool DropdownOpen = false;

    private async Task FecharMenu()
    {
        await JS.InvokeVoidAsync("fecharMenuNavbar");
        DropdownOpen = false;  // Fecha o dropdown ao clicar em um link
    }

    private void ToggleDropdown()
    {
        DropdownOpen = !DropdownOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("addBodyClickListener");
        }
    }

    [JSInvokable]
    public void CloseDropdown()
    {
        if (DropdownOpen)
        {
            DropdownOpen = false;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // var usuario = await AuthService.ObterUsuarioLogadoAsync();
        // TipoUsuario = usuario.Tipo; 
    }
}
